<UserControl x:Class="ExcelAnalysisTools.View.AddressToAddress"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:ExcelAnalysisTools.View"
             xmlns:model="clr-namespace:ExcelAnalysisTools.Model"
             d:DesignHeight="300"
             d:DesignWidth="600"
             mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type model:AddressModel}">
            <TextBlock Margin="3">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0} {1}">
                        <Binding Path="District" />
                        <Binding Path="Address" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>

        <DataTemplate x:Key="AddressModelSelect"
                      DataType="{x:Type model:AddressModel}">
            <DockPanel>
                <Button Content="-&gt;"
                        DockPanel.Dock="Right"
                        Command="{Binding DataContext.SetUidToNotFoundItemCommand, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}"
                        CommandParameter="{Binding .}" />
                <TextBlock Margin="3"
                           DockPanel.Dock="Left">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} {1}">
                            <Binding Path="District" />
                            <Binding Path="Address" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="119*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <!--<TextBlock Margin="3"
                   Text="{Binding ProfileName, StringFormat='Профиль -&gt; {0}'}" />-->
        <TextBox Grid.Column="0"
                 Margin="3"
                 Text="{Binding SelectedNotFoundItem.Address}" />
        <ListBox Grid.Row="1"
                 Margin="3"
                 ItemsSource="{Binding NotFoundItems}"
                 SelectedItem="{Binding SelectedNotFoundItem}" />

        <TextBox Grid.Column="1"
                 Margin="3"
                 Text="{Binding FindText, UpdateSourceTrigger=PropertyChanged}" />
        <ListBox Grid.Row="1"
                 Grid.Column="1"
                 Margin="3"
                 HorizontalContentAlignment="Stretch"
                 ItemTemplate="{StaticResource AddressModelSelect}"
                 ItemsSource="{Binding Items}" />

    </Grid>
</UserControl>
